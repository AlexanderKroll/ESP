### CCB plot style sheet 0v4.mplstyle
# based on from https://matplotlib.org/3.1.1/tutorials/introductory/customizing.html#matplotlibrc-sample
# based on CCB plot style sheet 0v1 with following modifications:
# - axis/axis_lables/ticks with a darker grey (used '666666' instead of 'grey')
# - tick marks slightly longer (set to 5 from of 3.5, minor size set to 3 from 2)
# - smaller markers: (size set to 5 from 8)
# - default line style set to '-'
# - bright quality color scheme (7 colors) reordered, colour-blind safe
#   4477AA EE6677 228833 CCBB44 66CCEE AA3377 BBBBBB
#   blue   cyan   green  yellow red    purple grey
#   Bright qualitative colour scheme 
# updated, Peter Schubert 07.07.2020

#### LINES
lines.linewidth        : 1.5     ## line width in points   (control line widht)
lines.linestyle        : -       ##                        (default line style)
lines.color            : C0      ## (controlled via axes.prop_cycle) 
lines.marker           : None    ## (controlled via axes.prop_cycle) 
lines.markerfacecolor  : auto    ## the default markerfacecolor
lines.markeredgecolor  : auto    ## the default markeredgecolor
lines.markeredgewidth  : 1.0     ## the line width around the marker symbol
lines.markersize       : 5       ## markersize, in points  (control marker size)
lines.dash_joinstyle   : round        ## miter|round|bevel
lines.dash_capstyle    : butt         ## butt|round|projecting
lines.solid_joinstyle  : round        ## miter|round|bevel
lines.solid_capstyle   : projecting   ## butt|round|projecting
lines.antialiased      : True         ## render lines in antialiased (no jaggies)
lines.dashed_pattern   : 3.7, 1.6     ## The three standard dash patterns.  
lines.dashdot_pattern  : 6.4, 1.6, 1, 1.6
lines.dotted_pattern   : 1, 1.65
lines.scale_dashes     : True         ## standard dash patterns are scaled by the linewidth.
markers.fillstyle      : full         ## full|left|right|bottom|top|none     (control fill style of marker

#### FONT
font.family         : sans-serif   ## font family to use: serif, sans-serif, cursive, fantasy, monospace
font.style          : normal       ## normal, italic, oblique
font.variant        : normal       ## normal, small-caps
font.weight         : normal       ## 13 values: normal (400), bold (700), bolder, lighter, 100, 200, 300, ..., 900
font.stretch        : normal       ## 11 values: ultra-condensed, extra-condensed, condensed, semi-condensed, normal, 
                                   ## semi-expanded, expanded, extra-expanded, ultra-expanded, wider, and narrower
font.size           : 10.0         ##      (CONTROL default text sizes -> baseline for special text sizez)
                                   ## special text sizes: tick labels, axes, labels, title, etc can be used relative to font size
                                   ## using values: [xx-small, x-small, small, medium, large, x-large, xx-large, larger, smaller]
## default fonts priorites as per matplotlib     (CONTROL fonts priorities for respective family - we use sans-serif)
font.sans-serif     : DejaVu Sans, Bitstream Vera Sans, Computer Modern Sans Serif, Lucida Grande, Verdana, Geneva, Lucid, Arial, Helvetica, Avant Garde, sans-serif
font.serif          : DejaVu Serif, Bitstream Vera Serif, Computer Modern Roman, New Century Schoolbook, Century Schoolbook L, Utopia, ITC Bookman, Bookman, Nimbus Roman No9 L, Times New Roman, Times, Palatino, Charter, serif
font.cursive        : Apple Chancery, Textile, Zapf Chancery, Sand, Script MT, Felipa, cursive
font.fantasy        : Comic Sans MS, Chicago, Charcoal, ImpactWestern, Humor Sans, xkcd, fantasy
font.monospace      : DejaVu Sans Mono, Bitstream Vera Sans Mono, Computer Modern Typewriter, Andale Mono, Nimbus Mono L, Courier New, Courier, Fixed, Terminal, monospace

#### TEXT
text.color          : black   ## control standtard text color 
text.usetex         : False   ## if True, use latex for all text handling
text.latex.preamble :         ## IMPROPER USE OF THIS FEATURE WILL LEAD TO LATEX FAILURES
text.latex.preview  : False
text.hinting : auto      ## May be one of the following: [none, auto, native, either], auto: Use FreeType's autohinter
text.hinting_factor : 8  ## amount of softness for hinting in the horizontal direction
                         ## A value of 1 will hint to full pixels. A value of 2 will hint to half pixels etc.
text.antialiased : True  ## If True (default), the text will be antialiased. This only affects the Agg backend.

mathtext.fontset : dejavusans  ## Should be 'dejavusans' (default),
                               ## ['dejavuserif', 'cm' (Computer Modern), 'stix' or 'stixsans']
mathtext.fallback_to_cm : True ## When True, use symbols from the Computer Modern fonts
                               ##  when a symbol can not be found in one of the custom math fonts.
mathtext.default : sf          ## The default font to use for math. any of the LaTeX font names
                               ## ['rm', 'cal', 'it', 'tt', 'sf', 'bf', 'default', 'bb', 'frak', 'circled', 'scr', 'regular']

#### AXES
axes.facecolor      : white   ## axes background color
axes.edgecolor      : 666666    ## axes edge color                         (CONTROL color of edges)
axes.linewidth      : 0.8     ## edge linewidth
axes.grid           : False   ## display grid or not                     (CONTROL grid on-/off, detail under GRID)
axes.grid.axis      : both    ## which axis the grid should apply to (x, y, or both)
axes.grid.which     : major   ## gridlines at major, minor or both ticks (minor only works, when ticks are visible)
axes.titlesize      : large   ## fontsize of the axes title
axes.titleweight    : normal  ## font weight of title
axes.titlepad       : 12.0    ## pad between axes and title in points    (CONTROL distance of title to chart)
axes.labelsize      : medium  ## fontsize of the x any y labels   (e.g. medium) 
axes.labelpad       : 3.0     ## space between label and axis            (CONTROL distance of labels to axis)
axes.labelweight    : normal  ## weight of the x and y labels
axes.labelcolor     : black
axes.axisbelow      : True    ## draw axis gridlines and ticks below patches (True); above patches but below
                              ## lines ('line'); or above all (False)
axes.formatter.limits       : -3, 3  ## use scientific notation if log10 of axis range exceed these values
axes.formatter.use_locale   : False  ## When True, format tick labels according to the user's locale.
                                     ## For example, use ',' as a decimal separator in the fr_FR locale.
axes.formatter.use_mathtext : False  ## When True, use mathtext for scientific notation.
axes.formatter.min_exponent : 0      ## minimum exponent to format in scientific notation
#axes.formatter.useoffset   : True   ## If True, the tick label formatter will default to labeling ticks relative
                                     ## to an offset when the data range is small compared to the minimum absolute
                                     ## value of the data.
#axes.formatter.offset_threshold : 4 ## When useoffset is True, the offset will be used when it can remove
                                     ## at least this number of significant digits from tick labels.                         
axes.spines.left    : True           ## display axis spines
axes.spines.bottom  : True           ##
axes.spines.top     : False          ##              (CONTROL top/right spine. independent of tick marks)
axes.spines.right   : False          ##
axes.unicode_minus  : False          ##              (CONTROL if unicode minus sign used for tick labels)
axes.prop_cycle  : cycler(color  = ['4477AA', 'EE6677', '228833', 'CCBB44', '66CCEE', 'AA3377', 'BBBBBB'] )
                      ## bright qualitative color scheme - reordered, as per Paul Tol's Colour Schemes and templates
                      ##    https://personal.sron.nl/~pault/
                      ##   (CONTROL colors and marker types, add more colors and markers if required)
                      ## color cycle for plot lines  as list of string. colorspecs: single letter, long name, or web-style hex
                      ## Note the use of string escapes here ('1f77b4', instead of 1f77b4) as opposed to the rest of this file.
axes.autolimit_mode : data     ## How to scale axes limits to data. "data" or "round_numbers"  (CONTROL tick labels
axes.xmargin        : 0.02     ## x,y margin from data to axis    (CONTROL margin left/right from data points to axis)
axes.ymargin        : 0.02     ##   default 0.05

#### GRIDS 
grid.color       :   b0b0b0    ## grid color    (grid switched on with axes.grid=True)
grid.linestyle   :   --        ## dash
grid.linewidth   :   0.8       ## in points
grid.alpha       :   0.7       ## transparency, between 0.0 and 1.0

#### TICKS
xtick.top            : False  ## draw ticks on the top side  (CONTROL display of ticks on top axis) !!!
xtick.bottom         : True   ## draw ticks on the bottom side
xtick.labeltop       : False  ## draw label on the top
xtick.labelbottom    : True   ## draw label on the bottom
xtick.major.size     : 5      ## major tick size in points   (CONTROL length of the major tick marks) !!!
xtick.minor.size     : 3      ## minor tick size in points
xtick.major.width    : 0.8    ## major tick width in points
xtick.minor.width    : 0.6    ## minor tick width in points
xtick.major.pad      : 3.5    ## distance to major tick label in points (CONTROL distance between ticks and tick label)
xtick.minor.pad      : 3.4    ## distance to the minor tick label in points
xtick.color          : 666666   ## color of the tick labels
xtick.labelsize      : medium ## fontsize of the tick labels           (CONTROL label size, medium: equals font size)
xtick.direction      : inout  ## direction: in, out, or inout          (CONTROL how ticks are located on the axis)
xtick.minor.visible  : False  ## visibility of minor ticks on x-axis   (CONTROL activation of minor ticks)
xtick.major.top      : True   ## draw x axis top major ticks           (CONTROL if ticks are shown)
xtick.major.bottom   : True   ## draw x axis bottom major ticks
xtick.minor.top      : True   ## draw x axis top minor ticks
xtick.minor.bottom   : True   ## draw x axis bottom minor ticks
xtick.alignment      : center ## alignment of xticks 
ytick.left           : True   ## draw ticks on the left side
ytick.right          : False  ## draw ticks on the right side         
ytick.labelleft      : True   ## draw tick labels on the left side
ytick.labelright     : False  ## draw tick labels on the right side
ytick.major.size     : 5      ## major tick size in points
ytick.minor.size     : 3      ## minor tick size in points
ytick.major.width    : 0.8    ## major tick width in points
ytick.minor.width    : 0.6    ## minor tick width in points
ytick.major.pad      : 3.5    ## distance to major tick label in points
ytick.minor.pad      : 3.4    ## distance to the minor tick label in points
ytick.color          : 666666   ## color of the tick labels               (CONTROL color of ticks)
ytick.labelsize      : medium ## fontsize of the tick labels
ytick.direction      : inout  ## direction: in, out, or inout
ytick.minor.visible  : False  ## visibility of minor ticks on y-axis
ytick.major.left     : True   ## draw y axis left major ticks
ytick.major.right    : True   ## draw y axis right major ticks
ytick.minor.left     : True   ## draw y axis left minor ticks
ytick.minor.right    : True   ## draw y axis right minor ticks
ytick.alignment      : center ## alignment of yticks

#### Legend
legend.loc           : best
legend.frameon       : False    ## if True, draw the legend on a background patch (CONTROL frame around legend)
legend.framealpha    : 0.7      ## legend patch transparency
legend.facecolor     : inherit  ## inherit from axes.facecolor; or color spec
legend.edgecolor     : 0.8      ## background patch boundary color
legend.fancybox      : True     ## if True, use a rounded box for the legend background, else a rectangle
legend.shadow        : False    ## if True, give background a shadow effect  (3D effect
legend.numpoints     : 1        ## the number of marker points in the legend line
legend.scatterpoints : 1        ## number of scatter points
legend.markerscale   : 0.9      ## the relative size of legend markers vs. original (CONTROL, posslibly make it a bit samller)
legend.fontsize      : medium
legend.title_fontsize : None    ## None sets to the same as the default axes.
## Dimensions as fraction of fontsize:
legend.borderpad     : 0.2      ## border whitespace  (CONTROL, default is 0.4)
legend.labelspacing  : 0.3      ## the vertical space between the legend entries (default is 0.5)
legend.handlelength  : 1.0      ## the length of the legend lines  (CONTROL, default is 2.0)
legend.handleheight  : 0.7      ## the height of the legend handle
legend.handletextpad : 0.5      ## the space between the legend line and legend text (default: 0.8)
legend.borderaxespad : 0.2      ## the border between the axes and legend edge (default: 0.5)
legend.columnspacing : 2.0      ## column separation

#### FIGURE
figure.titlesize   : 20         ## size of the figure title (Figure.suptitle())  (CONTROL title size)
figure.titleweight : bold       ## weight of the figure title
figure.figsize     : 5, 3.09    ## figure size in inches     (CONTROL x/y-size of plot)
                                ## golden ratio: phi = y/x = (1+sqrt(5))/2 ≈ 1.618, y = (phi-1)x ≈ 0.618 * x
figure.dpi       : 100          ## figure dots per inch      (control dpi: 300 dpi much better than 100 dpi, but takes more time
figure.facecolor : white        ## figure facecolor
figure.edgecolor : white        ## figure edgecolor
figure.frameon : False          ## enable figure frame
#figure.max_open_warning : 20   ## max number of figures to open through the pyplot interface before emitting a warning.
figure.subplot.left    : 0.125  ## the left side of the subplots of the figure
figure.subplot.right   : 0.9    ## the right side of the subplots of the figure
figure.subplot.bottom  : 0.11   ## the bottom of the subplots of the figure
figure.subplot.top     : 0.88   ## the top of the subplots of the figure
figure.subplot.wspace  : 0.30   ## amount of width reserved for space between subplots,  as a fraction of avg axis width
figure.subplot.hspace  : 0.45   ## amount of height reserved for space between subplots, as a fraction of avg axis height
## Figure layout
#figure.autolayout : False      ## When True, automatically adjust subplot parameters to make the plot fit the figure
                                ## using `tight_layout`
#figure.constrained_layout.use    : False   ## When True, automatically make plot elements fit on the figure. (Not compatible
                                            ##  with `autolayout`, above).
#figure.constrained_layout.h_pad  : 0.04167 ## Padding around axes objects. Float representing
#figure.constrained_layout.w_pad  : 0.04167 ##  inches. Default is 3./72. inches (3 pts)
#figure.constrained_layout.hspace : 0.02    ## Space between subplot groups. Float representing
#figure.constrained_layout.wspace : 0.02    ##  a fraction of the subplot widths being separated.

#### SCATTER PLOTS
scatter.marker     : o                       ## The default marker type for scatter plots.
scatter.edgecolors : face                    ## The default edgecolors for scatter plots.

#### Boxplot
boxplot.notch       : False                  # instead of square box show confidence interval around median, default: False
boxplot.vertical    : True                   # orientation of the boxplot, default: True
boxplot.whiskers    : 1.5                    # IQR=distance Q3-Q1. Outliers: > factor*IQR from Q1 or Q3. default: 1.5: 
boxplot.bootstrap   : None                   # number of times to bootstrap the median for 95% CI for notch plot 1000 - 10000 
                                             # default: None (use gaussian based approximation for notch plot)
boxplot.patchartist : False                  # plot with box with patch artist (True) or Line2D artist (False), default: False
boxplot.showmeans   : False                  # whether means should be shown (style controlled by meanline)
boxplot.showcaps    : True                   # wheather to show caps at end of whiskers
boxplot.showbox     : True                   # wheather to show the box
boxplot.showfliers  : True                   # wheather to show outliers
boxplot.meanline    : False                  # show means as a line (True) or a marker (False), activated by showmeans=True
boxplot.flierprops.marker          : o            # markerstyle for outliers (for showfliers=True)
boxplot.flierprops.markerfacecolor : None         # default: 0, None, black, 6        
boxplot.flierprops.markeredgecolor : black            
boxplot.flierprops.markersize      : 6            
boxplot.flierprops.color           : black        # linestyle for line between outliers 
boxplot.flierprops.linestyle       : none         # default: black, none, 1.0         
boxplot.flierprops.linewidth       : 1.0           
boxplot.boxprops.color             : black        # linestyle of box for Q3-Q1
boxplot.boxprops.linewidth         : 1.0          # defaults: black, 1.0, -
boxplot.boxprops.linestyle         : -
boxplot.whiskerprops.color         : black        # linestyle of whiskers extending from box to points not considered outliers
boxplot.whiskerprops.linewidth     : 1.0          # defaults: black, 1.0, -
boxplot.whiskerprops.linestyle     : -
boxplot.capprops.color             : black        # linestyle of caps at end of whiskers
boxplot.capprops.linewidth         : 1.0          # defaults: black, 1.0, -
boxplot.capprops.linestyle         : -
boxplot.medianprops.color          : C1           # linestyle of median line within the box
boxplot.medianprops.linewidth      : 1.0          # defaults: C1, 1.0, -
boxplot.medianprops.linestyle      : -
boxplot.meanprops.marker           : x            # markerstyle for mean (showmean=True, meanline=False)
boxplot.meanprops.markerfacecolor  : C2           # default: ^, C2, C2
boxplot.meanprops.markeredgecolor  : blue       
boxplot.meanprops.markersize       :  6
boxplot.meanprops.color            : C2           # linestyle for mean (showmean=True, meanline=True)
boxplot.meanprops.linestyle        : --           # default: C2, --, 1.0
boxplot.meanprops.linewidth        : 1.0

#### SAVING FIGURES
savefig.dpi         : figure   ## figure dots per inch or 'figure'
savefig.facecolor   : white    ## figure facecolor when saving
savefig.edgecolor   : green    ## figure edgecolor when saving
savefig.format      : pdf      ## [eps, pdf, pgf, png, ps, raw, rgba, svg, svgz]
savefig.bbox        : tight    ## 'tight' or 'standard'.
savefig.pad_inches  : 0.1      ## Padding to be used when bbox is set to 'tight'
savefig.transparent : False    ## setting that controls whether figures are saved with a transparent background

### pdf backend params
pdf.compression   : 6          ## integer from 0 to 9 ## 0 disables compression (good for debugging)
pdf.fonttype      : 3          ## Output Type 3 (Type3) or Type 42 (TrueType) (CONTROL: reduce size with Type3)

#### ERRORBAR PLOTS
errorbar.capsize : 2           ## length of end cap on error bars in pixels
#### HISTOGRAM PLOTS
hist.bins : 50                 ## The default number of histogram bins.

#----------------------------

#### PATCHES
## Patches are graphical objects that fill 2D space, like polygons or
## circles.  See
## http://matplotlib.org/api/artist_api.html#module-matplotlib.patches
## information on patch properties
#patch.linewidth        : 1       ## edge width in points.
#patch.facecolor        : C0
#patch.edgecolor        : black   ## if forced, or patch is not filled
#patch.force_edgecolor  : False   ## True to always use edgecolor
#patch.antialiased      : True    ## render patches in antialiased (no jaggies)

#### HATCHES
#hatch.color     : black
#hatch.linewidth : 1.0

#### DATES
## These control the default format strings used in AutoDateFormatter.
## Any valid format datetime format string can be used (see the python
## `datetime` for details).  For example using '%%x' will use the locale date representation
## '%%X' will use the locale time representation and '%%c' will use the full locale datetime
## representation.
## These values map to the scales:
##     {'year': 365, 'month': 30, 'day': 1, 'hour': 1/24, 'minute': 1 / (24 * 60)}

#date.autoformatter.year     : %Y
#date.autoformatter.month    : %Y-%m
#date.autoformatter.day      : %Y-%m-%d
#date.autoformatter.hour     : %m-%d %H
#date.autoformatter.minute   : %d %H:%M
#date.autoformatter.second   : %H:%M:%S
#date.autoformatter.microsecond   : %M:%S.%f

#### IMAGES
#image.aspect          : equal    ## equal | auto | a number
#image.interpolation   : nearest  ## see help(imshow) for options
#image.cmap            : viridis  ## A colormap name, gray etc...
#image.lut             : 256      ## the size of the colormap lookup table
#image.origin          : upper    ## lower | upper
#image.resample        : True
#image.composite_image : True     ## When True, all the images on a set of axes are
                                  ## combined into a single composite image before
                                  ## saving a figure as a vector graphics file,
                                  ## such as a PDF.

#### CONTOUR PLOTS
#contour.negative_linestyle : dashed ## string or on-off ink sequence
#contour.corner_mask        : True   ## True | False | legacy

#### Agg rendering
#### Warning: experimental, 2008/10/10
#agg.path.chunksize : 0           ## 0 to disable; values in the range
                                  ## 10000 to 100000 can improve speed slightly
                                  ## and prevent an Agg rendering failure
                                  ## when plotting very large data sets,
                                  ## especially if they are very gappy.
                                  ## It may cause minor artifacts, though.
                                  ## A value of 20000 is probably a good
                                  ## starting point.
#### PATHS
#path.simplify : True   ## When True, simplify paths by removing "invisible"
                        ## points to reduce file size and increase rendering
                        ## speed
#path.simplify_threshold : 0.111111111111  ## The threshold of similarity below which
                                           ## vertices will be removed in the
                                           ## simplification process
#path.snap : True ## When True, rectilinear axis-aligned paths will be snapped to
                  ## the nearest pixel when certain criteria are met.  When False,
                  ## paths will never be snapped.
#path.sketch : None ## May be none, or a 3-tuple of the form (scale, length,
                    ## randomness).
                    ## *scale* is the amplitude of the wiggle
                    ## perpendicular to the line (in pixels).  *length*
                    ## is the length of the wiggle along the line (in
                    ## pixels).  *randomness* is the factor by which
                    ## the length is randomly scaled.
#path.effects : []  ##

### tk backend params
#tk.window_focus   : False    ## Maintain shell focus for TkAgg

### ps backend params
#ps.papersize      : letter   ## auto, letter, legal, ledger, A0-A10, B0-B10
#ps.useafm         : False    ## use of afm fonts, results in small files
#ps.usedistiller   : False    ## can be: None, ghostscript or xpdf
                                          ## Experimental: may produce smaller files.
                                          ## xpdf intended for production of publication quality files,
                                          ## but requires ghostscript, xpdf and ps2eps
#ps.distiller.res  : 6000      ## dpi
#ps.fonttype       : 3         ## Output Type 3 (Type3) or Type 42 (TrueType)

### svg backend params
#svg.image_inline : True       ## write raster image data directly into the svg file
#svg.fonttype :   path         ## How to handle SVG fonts:
   ##     none: Assume fonts are installed on the machine where the SVG will be viewed.
   ##     path: Embed characters as paths -- supported by most SVG renderers
#svg.hashsalt : None           ## if not None, use this string as hash salt
                               ## instead of uuid4
### pgf parameter
#pgf.rcfonts : True
#pgf.preamble :            ## see text.latex.preamble for documentation
#pgf.texsystem : xelatex

### docstring params
##docstring.hardcopy = False  ## set this when you want to generate hardcopy docstring

## Event keys to interact with figures/plots via keyboard.
## Customize these settings according to your needs.
## Leave the field(s) empty if you don't need a key-map. (i.e., fullscreen : '')
#keymap.fullscreen : f, ctrl+f       ## toggling
#keymap.home : h, r, home            ## home or reset mnemonic
#keymap.back : left, c, backspace, MouseButton.BACK  ## forward / backward keys
#keymap.forward : right, v, MouseButton.FORWARD      ## for quick navigation
#keymap.pan : p                      ## pan mnemonic
#keymap.zoom : o                     ## zoom mnemonic
#keymap.save : s, ctrl+s             ## saving current figure
#keymap.help : f1                    ## display help about active tools
#keymap.quit : ctrl+w, cmd+w, q      ## close the current figure
#keymap.quit_all : W, cmd+W, Q       ## close all figures
#keymap.grid : g                     ## switching on/off major grids in current axes
#keymap.grid_minor : G               ## switching on/off minor grids in current axes
#keymap.yscale : l                   ## toggle scaling of y-axes ('log'/'linear')
#keymap.xscale : k, L                ## toggle scaling of x-axes ('log'/'linear')
#keymap.all_axes : a                 ## enable all axes
#keymap.copy : ctrl+c, cmd+c         ## Copy figure to clipboard

###ANIMATION settings
#animation.html :  none            ## How to display the animation as HTML in
                                   ## the IPython notebook. 'html5' uses
                                   ## HTML5 video tag; 'jshtml' creates a
                                   ## Javascript animation
#animation.writer : ffmpeg         ## MovieWriter 'backend' to use
#animation.codec : h264            ## Codec to use for writing movie
#animation.bitrate: -1             ## Controls size/quality tradeoff for movie.
                                   ## -1 implies let utility auto-determine
#animation.frame_format:  png      ## Controls frame format used by temp files
#animation.html_args:              ## Additional arguments to pass to html writer
#animation.ffmpeg_path:  ffmpeg    ## Path to ffmpeg binary. Without full path
                                   ## $PATH is searched
#animation.ffmpeg_args:            ## Additional arguments to pass to ffmpeg
#animation.avconv_path:  avconv    ## Path to avconv binary. Without full path
                                   ## $PATH is searched
#animation.avconv_args:            ## Additional arguments to pass to avconv
#animation.convert_path:  convert  ## Path to ImageMagick's convert binary.
                                   ## On Windows use the full path since convert
                                   ## is also the name of a system tool.
#animation.convert_args:           ## Additional arguments to pass to convert
#animation.embed_limit : 20.0      ## Limit, in MB, of size of base64 encoded
                                   ## animation in HTML (i.e. IPython notebook)